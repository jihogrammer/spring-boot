rootProject.name = "spring-boot"

include("common")
include("message")
include("validation")
include("items-login-application")
include("exception")
include("type-converter")
include("file-storage")
include("jdbc")
include("basic")

def registerModules(String baseDir, ArrayList<String> modules) {
    if (file(baseDir).isDirectory()) {
        modules.forEach {
            module -> {
                include(':' + module)
                project(':' + module).projectDir = file(baseDir + module)
            }
        }
    } else {
        throw new IllegalArgumentException("check path - " + baseDir)
    }
}

var domainModules = ['members', 'items'];
registerModules("./domain/", domainModules)

var webModules = ['web-1-servlet', 'web-2-jsp', 'web-3-servlet-mvc', 'web-4-servlet-front-controller', 'web-5-spring-mvc'];
registerModules("./the-development-of-the-spring-web/", webModules)
